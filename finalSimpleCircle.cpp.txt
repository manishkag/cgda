#include <GL/freeglut.h>
#include <math.h>

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0, 0.0, 0.0);  // Set color to red (R, G, B)
    glLoadIdentity();

    // Draw the circle
    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(0.0, 0.0);  // Center of the circle
    for (int i = 0; i <= 360; i++) {
        float angle = i * 3.14159265 / 180.0;
        float x = 0.5 * cos(angle);  // Radius of 0.5 (adjust as needed)
        float y = 0.5 * sin(angle);
        glVertex2f(x, y);
    }
    glEnd();

    glFlush();
}

void reshape(int w, int h) {
    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    float aspectRatio = (float)w / (float)h;
    gluOrtho2D(-1.0 * aspectRatio, 1.0 * aspectRatio, -1.0, 1.0);  // Adjust as needed
    glMatrixMode(GL_MODELVIEW);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Red Circle Example");

    glutDisplayFunc(display);
    glutReshapeFunc(reshape);

    glutMainLoop();
    return 0;
}
